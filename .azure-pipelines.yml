#--------------------------------------------------------------------------------------------------
# Windows
#--------------------------------------------------------------------------------------------------

jobs:
- job: win32
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      bash generate.sh win32
      7z a 3rdparty.zip win32
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win32

- job: win64
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      bash generate.sh win64
      7z a 3rdparty.zip win64
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win64

#--------------------------------------------------------------------------------------------------
# macOS
#--------------------------------------------------------------------------------------------------

- job: macOS
  pool:
    vmImage: "macOS-latest"
  steps:
  - bash: |
      bash generate.sh macOS
      zip -r 3rdparty.zip macOS
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-macOS

#--------------------------------------------------------------------------------------------------
# Linux
#--------------------------------------------------------------------------------------------------

- job: linux32
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty i386/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip;
                                     bash generate.sh linux;
                                     zip -r 3rdparty.zip linux"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-linux32

- job: linux64
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip;
                                     bash generate.sh linux;
                                     zip -r 3rdparty.zip linux"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-linux64

#--------------------------------------------------------------------------------------------------
# Android
#--------------------------------------------------------------------------------------------------

- job: android32
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip unzip;
                                     bash generate.sh android32;
                                     zip -r 3rdparty.zip android32"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-android32

- job: android64
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip unzip;
                                     bash generate.sh android64;
                                     zip -r 3rdparty.zip android64"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-android64
