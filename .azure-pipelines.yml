#--------------------------------------------------------------------------------------------------
# Windows
#--------------------------------------------------------------------------------------------------

jobs:
- job: win32_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh generate.sh win32 build
      7z a 3rdparty.zip win32
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win32-qt5

- job: win64_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh generate.sh win64 build
      7z a 3rdparty.zip win64
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win64-qt5

- job: win32_msvc_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh environment.sh msvc qt5
      sh generate.sh win32 build
      7z a 3rdparty.zip win32
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win32-msvc-qt5

- job: win64_msvc_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh environment.sh msvc qt5
      sh generate.sh win64 build
      7z a 3rdparty.zip win64
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win64-msvc-qt5

#--------------------------------------------------------------------------------------------------

- job: win64_qt6
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh environment.sh mingw qt6
      sh generate.sh win64 build
      7z a 3rdparty.zip win64
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-win64-qt6

#--------------------------------------------------------------------------------------------------
# macOS
#--------------------------------------------------------------------------------------------------

- job: macOS_qt5
  pool:
    vmImage: "macOS-10.15"
  steps:
  - bash: |
      sh generate.sh macOS build
      zip -rq 3rdparty.zip macOS
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-macOS-qt5

#--------------------------------------------------------------------------------------------------
# Linux
#--------------------------------------------------------------------------------------------------

- job: linux32_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty i386/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip;
                                     sh generate.sh linux build;
                                     zip -rq 3rdparty.zip linux"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-linux32-qt5

- job: linux64_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:20.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip;
                                     sh generate.sh linux build;
                                     zip -rq 3rdparty.zip linux"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-linux64-qt5

#--------------------------------------------------------------------------------------------------
# Android
#--------------------------------------------------------------------------------------------------

- job: android_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:20.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl zip unzip git;
                                     sh generate.sh android build;
                                     zip -rqy 3rdparty.zip android"
  - publish: $(System.DefaultWorkingDirectory)/3rdparty.zip
    artifact: 3rdparty-android-qt5
