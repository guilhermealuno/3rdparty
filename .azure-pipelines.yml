#--------------------------------------------------------------------------------------------------
# Windows
#--------------------------------------------------------------------------------------------------

jobs:
- job: win32
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh generate.sh win32
      ls -la win32
  - publish: $(System.DefaultWorkingDirectory)/win32
    artifact: 3rdparty-win32

- job: win64
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh generate.sh win64
      ls -la win64
  - publish: $(System.DefaultWorkingDirectory)/win64
    artifact: 3rdparty-win64

#--------------------------------------------------------------------------------------------------
# macOS
#--------------------------------------------------------------------------------------------------

- job: macOS
  pool:
    vmImage: "macOS-latest"
  steps:
  - bash: |
      sh generate.sh macOS
  - publish: $(System.DefaultWorkingDirectory)/macOS
    artifact: 3rdparty-macOS

#--------------------------------------------------------------------------------------------------
# Linux
#--------------------------------------------------------------------------------------------------

- job: linux32
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty i386/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl;
                                     bash generate.sh linux"
  - publish: $(System.DefaultWorkingDirectory)/linux
    artifact: 3rdparty-linux32

- job: linux64
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl;
                                     bash generate.sh linux"
  - publish: $(System.DefaultWorkingDirectory)/linux
    artifact: 3rdparty-linux64

#--------------------------------------------------------------------------------------------------
# Android
#--------------------------------------------------------------------------------------------------

- job: android32
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl unzip;
                                     bash generate.sh android32"
  - publish: $(System.DefaultWorkingDirectory)/android32
    artifact: 3rdparty-android32

- job: android64
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/3rdparty amd64/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /3rdparty;
                                     apt-get update;
                                     apt-get -y install sudo curl unzip;
                                     bash generate.sh android64"
  - publish: $(System.DefaultWorkingDirectory)/android64
    artifact: 3rdparty-android64
